#include <stdio.h>

#define MAX 100

void main() {
    int n, at[MAX], bt[MAX], rt[MAX], ct[MAX], tat[MAX], wt[MAX], start_time[MAX];
    int time = 0, completed = 0, shortest = -1, min_rt = 1e9;
    int is_completed[MAX] = {0};

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for(int i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i+1);
        scanf("%d%d", &at[i], &bt[i]);
        rt[i] = bt[i];
        start_time[i] = -1;
    }

    while(completed != n) {
        shortest = -1;
        min_rt = 1e9;
        for(int i = 0; i < n; i++) {
            if(at[i] <= time && is_completed[i] == 0 && rt[i] < min_rt && rt[i] > 0) {
                min_rt = rt[i];
                shortest = i;
            }
        }

        if(shortest == -1) {
            time++;
            continue;
        }

        if(start_time[shortest] == -1)
            start_time[shortest] = time;

        rt[shortest]--;
        time++;

        if(rt[shortest] == 0) {
            ct[shortest] = time;
            tat[shortest] = ct[shortest] - at[shortest];
            wt[shortest] = tat[shortest] - bt[shortest];
            is_completed[shortest] = 1;
            completed++;
        }
    }

    printf("\nP\tAT\tBT\tCT\tTAT\tWT\tRT\n");
    for(int i = 0; i < n; i++) 
    {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\t%d\n", i+1, at[i], bt[i], ct[i], tat[i], wt[i], start_time[i] - at[i]);
    }
}
